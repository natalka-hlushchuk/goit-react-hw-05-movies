{"version":3,"file":"static/js/247.2f702e29.chunk.js","mappings":"oPAiCA,UA3Ba,WACX,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAgCE,EAAAA,EAAAA,UAAS,CAAC,GAA1C,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCAEd,gHAE2BC,EAAAA,EAAAA,IAAQR,GAFnC,gBAEYS,EAFZ,EAEYA,KACRL,EAAYK,GAHhB,gDAKI,IAAIC,MAAMC,IAAAA,OAAAA,QAAA,kBALd,yBAOIL,GAAW,GAPf,6EAFc,sBACdA,GAAW,GADG,mCAYdM,EACD,GAAE,CAACZ,KAGF,gCACGK,IAAW,SAAC,KAAD,KACH,OAARF,QAAQ,IAARA,OAAA,EAAAA,EAAUU,QAAQ,SAAC,KAAD,CAAUA,KAAMV,MAGxC,C,+LC/BDW,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBF,EAAAA,EAAAA,IAAA,iCACKC,EADL,2BAFpB,cAEGE,EAFH,yBAKIA,GALJ,sCAOG,IAAIP,MAAJ,MAPH,gFAWA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA+BlB,GAA/B,gGAEoBc,EAAAA,EAAAA,IAAA,gBACZd,EADY,oBACEe,EADF,oBAFpB,cAEGE,EAFH,yBAKIA,GALJ,sCAOG,IAAIP,MAAJ,MAPH,gFAWA,SAAeF,EAAtB,+CAAO,OAAP,oBAAO,WAAuBR,GAAvB,gGAEoBc,EAAAA,EAAAA,IAAA,gBACZd,EADY,4BACUe,EADV,oBAFpB,cAEGE,EAFH,yBAKIA,GALJ,sCAOG,IAAIP,MAAJ,MAPH,gFAYA,SAAeS,EAAtB,+CAAO,OAAP,oBAAO,WAA0BnB,GAA1B,gGAEoBc,EAAAA,EAAAA,IAAA,gBACZd,EADY,4BACUe,EADV,oBAFpB,cAEGE,EAFH,yBAKIA,GALJ,sCAOG,IAAIP,MAAJ,MAPH,gFAWA,SAAeU,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,gGAEoBP,EAAAA,EAAAA,IAAA,gCACIC,EADJ,qEACoEM,IAHxF,cAEGJ,EAFH,yBAKIA,GALJ,sCAOG,IAAIP,MAAJ,MAPH,gFAbPF,EAAQ,M","sources":["components/Cast/Cast.jsx","service/api.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Notiflix from 'notiflix';\nimport { getCast } from 'service/api';\nimport { Loader, CastItem } from '../index';\n\nconst Cast = () => {\n  const { id } = useParams();\n  const [castMenu, setCastMenu] = useState({});\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    async function findActors() {\n      try {\n        const { data } = await getCast(id);\n        setCastMenu(data);\n      } catch (error) {\n        new Error(Notiflix.Notify.failure(`Request error`));\n      } finally {\n        setLoading(false);\n      }\n    }\n    findActors();\n  }, [id]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      {castMenu?.cast && <CastItem cast={castMenu} />}\n    </>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = '1c132fe45ecd58a684e8db3e61164617';\n\nexport async function findPopularMovie() {\n  try {\n    const response = await axios.get(\n      `/movie/popular?api_key=${KEY}&language=en-US&page=1`\n    );\n    return response;\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\nexport async function getMovieDetails(id) {\n  try {\n    const response = await axios.get(\n      `movie/${id}?api_key=${KEY}&language=en-US`\n    );\n    return response;\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\nexport async function getCast(id) {\n  try {\n    const response = await axios.get(\n      `movie/${id}/credits?api_key=${KEY}&language=en-US`\n    );\n    return response;\n  } catch (error) {\n    throw new Error(error);\n  }\n}\ngetCast(56774);\n\nexport async function getReviews(id) {\n  try {\n    const response = await axios.get(\n      `movie/${id}/reviews?api_key=${KEY}&language=en-US`\n    );\n    return response;\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\nexport async function getMovies(movie) {\n  try {\n    const response = await axios.get(\n      `/search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&limit=20&query=${movie}`\n    );\n    return response;\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n"],"names":["id","useParams","useState","castMenu","setCastMenu","loading","setLoading","useEffect","getCast","data","Error","Notiflix","findActors","cast","axios","KEY","findPopularMovie","response","getMovieDetails","getReviews","getMovies","movie"],"sourceRoot":""}