{"version":3,"file":"static/js/779.da69dab1.chunk.js","mappings":"2SAEaA,EAAgBC,EAAAA,GAAAA,IAAH,sHAObC,EAAcD,EAAAA,GAAAA,GAAH,qEAIXE,EAAgBF,EAAAA,GAAAA,EAAH,yFAKbG,EAAYH,EAAAA,GAAAA,IAAH,iE,SCgCtB,EAtCgB,WAAO,IAAD,IACZI,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BE,EAAAA,EAAAA,UAAS,CAAC,GAAxC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCAEd,gHAE2BC,EAAAA,EAAAA,IAAWR,GAFtC,gBAEYS,EAFZ,EAEYA,KACRL,EAAWK,GAHf,gDAKI,IAAIC,MAAMC,IAAAA,OAAAA,QAAA,kBALd,yBAOIL,GAAW,GAPf,6EAFc,sBACdA,GAAW,GADG,mCAYdM,EACD,GAAE,CAACZ,KAGF,UAACL,EAAD,WACGU,IAAW,SAAC,KAAD,KACJ,OAAPF,QAAO,IAAPA,GAAA,UAAAA,EAASU,eAAT,eAAkBC,QAAS,EAA3B,OACCX,QADD,IACCA,GADD,UACCA,EAASU,eADV,aACC,EAAkBE,KAAI,YAA8B,IAA3Bf,EAA0B,EAA1BA,GAAIgB,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACnC,OACE,UAACpB,EAAD,YACE,SAACC,EAAD,UAAgBkB,KAChB,yBAAIC,EAAJ,SAFgBjB,EAKrB,KAED,SAACD,EAAD,yDAIP,C,+LChDDmB,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBF,EAAAA,EAAAA,IAAA,iCACKC,EADL,2BAFpB,cAEGE,EAFH,yBAKIA,GALJ,sCAOG,IAAIX,MAAJ,MAPH,gFAWA,SAAeY,EAAtB,+CAAO,OAAP,oBAAO,WAA+BtB,GAA/B,gGAEoBkB,EAAAA,EAAAA,IAAA,gBACZlB,EADY,oBACEmB,EADF,oBAFpB,cAEGE,EAFH,yBAKIA,GALJ,sCAOG,IAAIX,MAAJ,MAPH,gFAWA,SAAea,EAAtB,+CAAO,OAAP,oBAAO,WAAuBvB,GAAvB,gGAEoBkB,EAAAA,EAAAA,IAAA,gBACZlB,EADY,4BACUmB,EADV,oBAFpB,cAEGE,EAFH,yBAKIA,GALJ,sCAOG,IAAIX,MAAJ,MAPH,gFAYA,SAAeF,EAAtB,+CAAO,OAAP,oBAAO,WAA0BR,GAA1B,gGAEoBkB,EAAAA,EAAAA,IAAA,gBACZlB,EADY,4BACUmB,EADV,oBAFpB,cAEGE,EAFH,yBAKIA,GALJ,sCAOG,IAAIX,MAAJ,MAPH,gFAWA,SAAec,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,gGAEoBP,EAAAA,EAAAA,IAAA,gCACIC,EADJ,qEACoEM,IAHxF,cAEGJ,EAFH,yBAKIA,GALJ,sCAOG,IAAIX,MAAJ,MAPH,gFAbPa,EAAQ,M","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","service/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsStyled = styled.div`\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n`;\n\nexport const ReviewsItem = styled.li`\n  list-style: none;\n  margin-bottom: 20px;\n`;\nexport const ReviewsAuthor = styled.p`\n  margin-bottom: 10px;\n  font-size: 15px;\n  font-weight: 900;\n`;\nexport const NoReviews = styled.div`\n  font-size: 20px;\n  font-weight: 900;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Notiflix from 'notiflix';\nimport { getReviews } from 'service/api';\nimport { Loader } from '../index';\nimport {\n  ReviewsStyled,\n  ReviewsItem,\n  ReviewsAuthor,\n  NoReviews,\n} from 'components/Reviews/Reviews.styled';\n\nconst Reviews = () => {\n  const { id } = useParams();\n  const [reviews, setReviews] = useState({});\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    async function findReviews() {\n      try {\n        const { data } = await getReviews(id);\n        setReviews(data);\n      } catch (error) {\n        new Error(Notiflix.Notify.failure(`Request error`));\n      } finally {\n        setLoading(false);\n      }\n    }\n    findReviews();\n  }, [id]);\n\n  return (\n    <ReviewsStyled>\n      {loading && <Loader />}\n      {reviews?.results?.length > 0 ? (\n        reviews?.results?.map(({ id, author, content }) => {\n          return (\n            <ReviewsItem key={id}>\n              <ReviewsAuthor>{author}</ReviewsAuthor>\n              <p>{content} </p>\n            </ReviewsItem>\n          );\n        })\n      ) : (\n        <NoReviews>We don't have any reviews for this movie</NoReviews>\n      )}\n    </ReviewsStyled>\n  );\n};\nexport default Reviews;\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = '1c132fe45ecd58a684e8db3e61164617';\n\nexport async function findPopularMovie() {\n  try {\n    const response = await axios.get(\n      `/movie/popular?api_key=${KEY}&language=en-US&page=1`\n    );\n    return response;\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\nexport async function getMovieDetails(id) {\n  try {\n    const response = await axios.get(\n      `movie/${id}?api_key=${KEY}&language=en-US`\n    );\n    return response;\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\nexport async function getCast(id) {\n  try {\n    const response = await axios.get(\n      `movie/${id}/credits?api_key=${KEY}&language=en-US`\n    );\n    return response;\n  } catch (error) {\n    throw new Error(error);\n  }\n}\ngetCast(56774);\n\nexport async function getReviews(id) {\n  try {\n    const response = await axios.get(\n      `movie/${id}/reviews?api_key=${KEY}&language=en-US`\n    );\n    return response;\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\nexport async function getMovies(movie) {\n  try {\n    const response = await axios.get(\n      `/search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&limit=20&query=${movie}`\n    );\n    return response;\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n"],"names":["ReviewsStyled","styled","ReviewsItem","ReviewsAuthor","NoReviews","id","useParams","useState","reviews","setReviews","loading","setLoading","useEffect","getReviews","data","Error","Notiflix","findReviews","results","length","map","author","content","axios","KEY","findPopularMovie","response","getMovieDetails","getCast","getMovies","movie"],"sourceRoot":""}